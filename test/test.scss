@import 'src/_core.scss';
// @import 'src/_output.scss';

$str: 'abvdcdsafd';
$list: '1' '2' '3' '4' 'abc';

@function test($list...) {
	$str: '';
	@for $i from 1 through 1{
		$str: $str + nth($list, $i)
	}
	@return $str;
}
.test {
	// content: ivs-s-parseList($str);
	// content: ivs-s-reverse($str);
	// content: test(1, 2, 3);
	// content: '删某项' ivs-l-removeItemByValue('abc', 1, $list);
	// content: '删索引某项' ivs-l-removeItemByIndex(3, 2, 5, 8);
	// content: '删索引某项' ivs-l-removeItemByIndex(3,$list);
	// content: '首位项' ivs-l-removeFirstItem(3, 2, 5, 8);
	// content: '删首位项' ivs-l-removeFirstItem($list);
	// content: '删mo位项' ivs-l-removeLastItem($list);
	// content: ivs-l-removeLastItem(1,2,3,4,5);
	
	// content: ivs-l-reverse($list);
	// content: 1 < 2 and 2 > 1 and 1+1 == 2 and 2 - 1 == 1;
	// $a: null;
	// content: type-of($a);
	
	$list: 1, 2, '3', '0', 2;
	$hasDot: index($list, '.');
	
	// content: $hasDot;
	// content: '这' if(index($list, '.')!=null,index($list, '.'), 0);
	// content;
	
	
	$spi: '1352';
	// content: ivs-s-parseNum($spi);
	// content: ivs-s-parseNum($spi);
	
	// content: 123 % 1000;
	// content: type-of(ivs-n-parseList(123));
	// content: ivs-n-parseList(1.23);	
	// content: type-of(false);	
	
	// content: type-of(true);
		
	// content: $str;
	// content: ivs-s-removeItemByIndex($str, 2);
	// content: type-of(nth(ivs-l-mergeMultiple((1,(2,3)), (4,5,6)), 2));
	// content: join(1, (1,(2,3),4,(5,(6,7),8,9),10));
	
	// content: ivs-n-removeItemByIndex(12345, 4);
	
	// content: ivs-toNum(123);
	// content: ivs-toNum('123');
	// content: ivs-toNum(1, 2, 3);
	
	
	
	// content: 1 ivs-toStr(1, 2, 3);
	// content: 2 ivs-toStr(123);
	// content: 3 ivs-toStr('123');
	
	// content: 1 ivs-toList(1, 2, 3);
	// content: 2 ivs-toList(123);
	// content: 3 ivs-toList('123');
	
	
	// content: 1 ivs-reverse(1, 2, 3);
	// content: 2 ivs-reverse(123);
	// content: 3 ivs-reverse('123');
	
	// $l: 1, 2, 3;
	// $val: '123';
	// $val: 123;

	$map: (
		"a": (
			"apple": "苹果",
			"color": "red",
			"other": (
				t1: "AAA",
				t2: "BBB",
				t3: "CCC"
			)
		)
	);
	$map2: (
		id: t1
	);
	
	// content: map-get(map-get(map-get($map, a), other), t3);
	// content: ivs-mhandle('get', $map, a, other, t3);
	
	// content: map-has-key(map-get(map-get($map, a), other), t5);
	// content: ivs-mhandle('has', $map, a, other, t5);
	
	// content: map-get(map-get(map-get($map, a), other), map-get($map2, id));
	// content: ivs-mhandle('get', $map, a, other, ($map2, id));

	$str: 'abcdefg';
	$list: a, b, c, d, e, f, g;
	content: ivs-splice($str, 1, 2);
	
	
}


